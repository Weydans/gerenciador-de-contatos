{
  "openapi": "3.0.3",
  "info": {
    "title": "API do sistema de gestão de contatos",
    "description": "API do sistema de gestão de contatos desenvolvido com PHP e Doctrine",
    "contact": {
      "email": "weydans@hotmail.com"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v0/"
    }
  ],
  "tags": [
    {
      "name": "Person",
      "description": "endpoits to manage persons"
    },
    {
      "name": "Contact",
      "description": "endpoints to manage contacts"
    }
  ],
  "paths": {
    "/persons": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get all persons",
        "description": "Returns all person",
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "description": "The nuame of the field you want to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The value of the field you want to search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePersonListWithContacts"
                }
              }
            }
          },
          "404": {
            "description": "Person not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Add a new person",
        "description": "Add a new person",
        "requestBody": {
          "description": "Create a new person",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Mary"
                  },
                  "cpf": {
                    "type": "string",
                    "example": 12345678901
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePerson"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of person",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Find person by ID",
        "description": "Returns a single person",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePersonWithContacts"
                }
              }
            }
          },
          "404": {
            "description": "Person not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Person"
        ],
        "summary": "Update an existing person",
        "description": "Update an existing person by Id",
        "requestBody": {
          "description": "Update an existent person",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Mary"
                  },
                  "cpf": {
                    "type": "string",
                    "example": 12345678901
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePerson"
                }
              }
            }
          },
          "404": {
            "description": "Person not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Person"
        ],
        "summary": "Deletes a person",
        "description": "delete a person",
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get all contacts",
        "description": "Returns a single contact",
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "description": "The nuame of the field you want to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The value of the field you want to search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseContactListWithPerson"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Add a new contact",
        "description": "Add a new contact",
        "requestBody": {
          "description": "Create a new contact to a person",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 198772
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "description": "Contact description",
                    "example": "my.email@mail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseContactWithPerson"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of a contact",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Find contact by ID",
        "description": "Returns a single contact",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseContactWithPerson"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update an existing contact",
        "description": "Update an existing contact by Id",
        "requestBody": {
          "description": "Update an existent contact",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 198772
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "description": "Contact description",
                    "example": "my.email@mail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseContactWithPerson"
                }
              }
            }
          },
          "404": {
            "description": "Not not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes a contact",
        "description": "delete a contact",
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "personId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "type": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "description": "Contact description",
            "example": "my.email@mail.com"
          }
        }
      },
      "ContactWithPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "type": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "description": "Contact description",
            "example": "my.email@mail.com"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "name": {
            "type": "string",
            "example": "Mary"
          },
          "cpf": {
            "type": "string",
            "example": 12345678901
          }
        }
      },
      "PersonWithContacts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "name": {
            "type": "string",
            "example": "Mary"
          },
          "cpf": {
            "type": "string",
            "example": 12345678901
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ApiResponseContactWithPerson": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ContactWithPerson"
          }
        }
      },
      "ApiResponseContactListWithPerson": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactWithPerson"
            }
          }
        }
      },
      "ApiResponsePerson": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Person"
          }
        }
      },
      "ApiResponsePersonWithContacts": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PersonWithContacts"
          }
        }
      },
      "ApiResponsePersonListWithContacts": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonWithContacts"
            }
          }
        }
      }
    },
    "requestBodies": {
      "Person": {
        "description": "Person object that needs to be added",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        }
      },
      "Contact": {
        "description": "Contact object that needs to be added",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      }
    }
  }
}
